buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'cn.showclear'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.7

repositories {
    mavenCentral()
}

test{//跳过测试
    exclude '**/*'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-freemarker')
    compile('org.springframework.boot:spring-boot-starter-jdbc')

    compile('com.mchange:c3p0:0.9.2')
    compile 'org.apache.commons:commons-dbcp2:2.3.0'
    compile 'com.alibaba:druid:1.1.9'
    compile 'com.zaxxer:HikariCP-java7:2.4.13'
    compile 'org.apache.tomcat:tomcat-jdbc:7.0.82'

    compile 'org.jfree:jfreechart:1.5.0'
    compile group: 'org.apache.poi', name: 'poi', version: '3.17'

    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    runtime('mysql:mysql-connector-java')
    compile('org.projectlombok:lombok')
    compile group: 'org.fusesource', name: 'sigar', version: '1.6.4'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.boot:spring-boot-starter-actuator')
}

task hello(){
    mustRunAfter(build)

//    def execute = getDependencies().createArtifactResolutionQuery().execute()
//    for(def com : execute.resolvedComponents){
//        println(com.toString())
//    }
//    println getDependencies().createArtifactResolutionQuery().

    project.get
    println '11111'
}
